{"id":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","dependencies":[{"name":"/Users/artemstanko/Documents/проект-37.js/package.json","includedInParent":true,"mtime":1739100563884},{"name":"/Users/artemstanko/Documents/проект-37.js/node_modules/socket.io-adapter/package.json","includedInParent":true,"mtime":1738687177862},{"name":"events","loc":{"line":5,"column":25,"index":166},"parent":"/Users/artemstanko/Documents/проект-37.js/node_modules/socket.io-adapter/dist/in-memory-adapter.js","resolved":"/Users/artemstanko/Documents/проект-37.js/node_modules/events/events.js"},{"name":"./contrib/yeast","loc":{"line":6,"column":24,"index":201},"parent":"/Users/artemstanko/Documents/проект-37.js/node_modules/socket.io-adapter/dist/in-memory-adapter.js","resolved":"/Users/artemstanko/Documents/проект-37.js/node_modules/socket.io-adapter/dist/contrib/yeast.js"},{"name":"ws","loc":{"line":7,"column":26,"index":247},"parent":"/Users/artemstanko/Documents/проект-37.js/node_modules/socket.io-adapter/dist/in-memory-adapter.js","resolved":"/Users/artemstanko/Documents/проект-37.js/node_modules/ws/browser.js"},{"name":"buffer","parent":"/Users/artemstanko/Documents/проект-37.js/node_modules/socket.io-adapter/dist/in-memory-adapter.js","resolved":"/Users/artemstanko/Documents/проект-37.js/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionAwareAdapter = exports.Adapter = void 0;\nconst events_1 = require(\"events\");\nconst yeast_1 = require(\"./contrib/yeast\");\nconst WebSocket = require(\"ws\");\nconst canPreComputeFrame = typeof ((_a = WebSocket === null || WebSocket === void 0 ? void 0 : WebSocket.Sender) === null || _a === void 0 ? void 0 : _a.frame) === \"function\";\nclass Adapter extends events_1.EventEmitter {\n    /**\n     * In-memory adapter constructor.\n     *\n     * @param {Namespace} nsp\n     */\n    constructor(nsp) {\n        super();\n        this.nsp = nsp;\n        this.rooms = new Map();\n        this.sids = new Map();\n        this.encoder = nsp.server.encoder;\n    }\n    /**\n     * To be overridden\n     */\n    init() { }\n    /**\n     * To be overridden\n     */\n    close() { }\n    /**\n     * Returns the number of Socket.IO servers in the cluster\n     *\n     * @public\n     */\n    serverCount() {\n        return Promise.resolve(1);\n    }\n    /**\n     * Adds a socket to a list of room.\n     *\n     * @param {SocketId}  id      the socket id\n     * @param {Set<Room>} rooms   a set of rooms\n     * @public\n     */\n    addAll(id, rooms) {\n        if (!this.sids.has(id)) {\n            this.sids.set(id, new Set());\n        }\n        for (const room of rooms) {\n            this.sids.get(id).add(room);\n            if (!this.rooms.has(room)) {\n                this.rooms.set(room, new Set());\n                this.emit(\"create-room\", room);\n            }\n            if (!this.rooms.get(room).has(id)) {\n                this.rooms.get(room).add(id);\n                this.emit(\"join-room\", room, id);\n            }\n        }\n    }\n    /**\n     * Removes a socket from a room.\n     *\n     * @param {SocketId} id     the socket id\n     * @param {Room}     room   the room name\n     */\n    del(id, room) {\n        if (this.sids.has(id)) {\n            this.sids.get(id).delete(room);\n        }\n        this._del(room, id);\n    }\n    _del(room, id) {\n        const _room = this.rooms.get(room);\n        if (_room != null) {\n            const deleted = _room.delete(id);\n            if (deleted) {\n                this.emit(\"leave-room\", room, id);\n            }\n            if (_room.size === 0 && this.rooms.delete(room)) {\n                this.emit(\"delete-room\", room);\n            }\n        }\n    }\n    /**\n     * Removes a socket from all rooms it's joined.\n     *\n     * @param {SocketId} id   the socket id\n     */\n    delAll(id) {\n        if (!this.sids.has(id)) {\n            return;\n        }\n        for (const room of this.sids.get(id)) {\n            this._del(room, id);\n        }\n        this.sids.delete(id);\n    }\n    /**\n     * Broadcasts a packet.\n     *\n     * Options:\n     *  - `flags` {Object} flags for this packet\n     *  - `except` {Array} sids that should be excluded\n     *  - `rooms` {Array} list of rooms to broadcast to\n     *\n     * @param {Object} packet   the packet object\n     * @param {Object} opts     the options\n     * @public\n     */\n    broadcast(packet, opts) {\n        const flags = opts.flags || {};\n        const packetOpts = {\n            preEncoded: true,\n            volatile: flags.volatile,\n            compress: flags.compress,\n        };\n        packet.nsp = this.nsp.name;\n        const encodedPackets = this._encode(packet, packetOpts);\n        this.apply(opts, (socket) => {\n            if (typeof socket.notifyOutgoingListeners === \"function\") {\n                socket.notifyOutgoingListeners(packet);\n            }\n            socket.client.writeToEngine(encodedPackets, packetOpts);\n        });\n    }\n    /**\n     * Broadcasts a packet and expects multiple acknowledgements.\n     *\n     * Options:\n     *  - `flags` {Object} flags for this packet\n     *  - `except` {Array} sids that should be excluded\n     *  - `rooms` {Array} list of rooms to broadcast to\n     *\n     * @param {Object} packet   the packet object\n     * @param {Object} opts     the options\n     * @param clientCountCallback - the number of clients that received the packet\n     * @param ack                 - the callback that will be called for each client response\n     *\n     * @public\n     */\n    broadcastWithAck(packet, opts, clientCountCallback, ack) {\n        const flags = opts.flags || {};\n        const packetOpts = {\n            preEncoded: true,\n            volatile: flags.volatile,\n            compress: flags.compress,\n        };\n        packet.nsp = this.nsp.name;\n        // we can use the same id for each packet, since the _ids counter is common (no duplicate)\n        packet.id = this.nsp._ids++;\n        const encodedPackets = this._encode(packet, packetOpts);\n        let clientCount = 0;\n        this.apply(opts, (socket) => {\n            // track the total number of acknowledgements that are expected\n            clientCount++;\n            // call the ack callback for each client response\n            socket.acks.set(packet.id, ack);\n            if (typeof socket.notifyOutgoingListeners === \"function\") {\n                socket.notifyOutgoingListeners(packet);\n            }\n            socket.client.writeToEngine(encodedPackets, packetOpts);\n        });\n        clientCountCallback(clientCount);\n    }\n    _encode(packet, packetOpts) {\n        const encodedPackets = this.encoder.encode(packet);\n        if (canPreComputeFrame &&\n            encodedPackets.length === 1 &&\n            typeof encodedPackets[0] === \"string\") {\n            // \"4\" being the \"message\" packet type in the Engine.IO protocol\n            const data = Buffer.from(\"4\" + encodedPackets[0]);\n            // see https://github.com/websockets/ws/issues/617#issuecomment-283002469\n            packetOpts.wsPreEncodedFrame = WebSocket.Sender.frame(data, {\n                readOnly: false,\n                mask: false,\n                rsv1: false,\n                opcode: 1,\n                fin: true,\n            });\n        }\n        return encodedPackets;\n    }\n    /**\n     * Gets a list of sockets by sid.\n     *\n     * @param {Set<Room>} rooms   the explicit set of rooms to check.\n     */\n    sockets(rooms) {\n        const sids = new Set();\n        this.apply({ rooms }, (socket) => {\n            sids.add(socket.id);\n        });\n        return Promise.resolve(sids);\n    }\n    /**\n     * Gets the list of rooms a given socket has joined.\n     *\n     * @param {SocketId} id   the socket id\n     */\n    socketRooms(id) {\n        return this.sids.get(id);\n    }\n    /**\n     * Returns the matching socket instances\n     *\n     * @param opts - the filters to apply\n     */\n    fetchSockets(opts) {\n        const sockets = [];\n        this.apply(opts, (socket) => {\n            sockets.push(socket);\n        });\n        return Promise.resolve(sockets);\n    }\n    /**\n     * Makes the matching socket instances join the specified rooms\n     *\n     * @param opts - the filters to apply\n     * @param rooms - the rooms to join\n     */\n    addSockets(opts, rooms) {\n        this.apply(opts, (socket) => {\n            socket.join(rooms);\n        });\n    }\n    /**\n     * Makes the matching socket instances leave the specified rooms\n     *\n     * @param opts - the filters to apply\n     * @param rooms - the rooms to leave\n     */\n    delSockets(opts, rooms) {\n        this.apply(opts, (socket) => {\n            rooms.forEach((room) => socket.leave(room));\n        });\n    }\n    /**\n     * Makes the matching socket instances disconnect\n     *\n     * @param opts - the filters to apply\n     * @param close - whether to close the underlying connection\n     */\n    disconnectSockets(opts, close) {\n        this.apply(opts, (socket) => {\n            socket.disconnect(close);\n        });\n    }\n    apply(opts, callback) {\n        const rooms = opts.rooms;\n        const except = this.computeExceptSids(opts.except);\n        if (rooms.size) {\n            const ids = new Set();\n            for (const room of rooms) {\n                if (!this.rooms.has(room))\n                    continue;\n                for (const id of this.rooms.get(room)) {\n                    if (ids.has(id) || except.has(id))\n                        continue;\n                    const socket = this.nsp.sockets.get(id);\n                    if (socket) {\n                        callback(socket);\n                        ids.add(id);\n                    }\n                }\n            }\n        }\n        else {\n            for (const [id] of this.sids) {\n                if (except.has(id))\n                    continue;\n                const socket = this.nsp.sockets.get(id);\n                if (socket)\n                    callback(socket);\n            }\n        }\n    }\n    computeExceptSids(exceptRooms) {\n        const exceptSids = new Set();\n        if (exceptRooms && exceptRooms.size > 0) {\n            for (const room of exceptRooms) {\n                if (this.rooms.has(room)) {\n                    this.rooms.get(room).forEach((sid) => exceptSids.add(sid));\n                }\n            }\n        }\n        return exceptSids;\n    }\n    /**\n     * Send a packet to the other Socket.IO servers in the cluster\n     * @param packet - an array of arguments, which may include an acknowledgement callback at the end\n     */\n    serverSideEmit(packet) {\n        console.warn(\"this adapter does not support the serverSideEmit() functionality\");\n    }\n    /**\n     * Save the client session in order to restore it upon reconnection.\n     */\n    persistSession(session) { }\n    /**\n     * Restore the session and find the packets that were missed by the client.\n     * @param pid\n     * @param offset\n     */\n    restoreSession(pid, offset) {\n        return null;\n    }\n}\nexports.Adapter = Adapter;\nclass SessionAwareAdapter extends Adapter {\n    constructor(nsp) {\n        super(nsp);\n        this.nsp = nsp;\n        this.sessions = new Map();\n        this.packets = [];\n        this.maxDisconnectionDuration =\n            nsp.server.opts.connectionStateRecovery.maxDisconnectionDuration;\n        const timer = setInterval(() => {\n            const threshold = Date.now() - this.maxDisconnectionDuration;\n            this.sessions.forEach((session, sessionId) => {\n                const hasExpired = session.disconnectedAt < threshold;\n                if (hasExpired) {\n                    this.sessions.delete(sessionId);\n                }\n            });\n            for (let i = this.packets.length - 1; i >= 0; i--) {\n                const hasExpired = this.packets[i].emittedAt < threshold;\n                if (hasExpired) {\n                    this.packets.splice(0, i + 1);\n                    break;\n                }\n            }\n        }, 60 * 1000);\n        // prevents the timer from keeping the process alive\n        timer.unref();\n    }\n    persistSession(session) {\n        session.disconnectedAt = Date.now();\n        this.sessions.set(session.pid, session);\n    }\n    restoreSession(pid, offset) {\n        const session = this.sessions.get(pid);\n        if (!session) {\n            // the session may have expired\n            return null;\n        }\n        const hasExpired = session.disconnectedAt + this.maxDisconnectionDuration < Date.now();\n        if (hasExpired) {\n            // the session has expired\n            this.sessions.delete(pid);\n            return null;\n        }\n        const index = this.packets.findIndex((packet) => packet.id === offset);\n        if (index === -1) {\n            // the offset may be too old\n            return null;\n        }\n        const missedPackets = [];\n        for (let i = index + 1; i < this.packets.length; i++) {\n            const packet = this.packets[i];\n            if (shouldIncludePacket(session.rooms, packet.opts)) {\n                missedPackets.push(packet.data);\n            }\n        }\n        return Promise.resolve(Object.assign(Object.assign({}, session), { missedPackets }));\n    }\n    broadcast(packet, opts) {\n        var _a;\n        const isEventPacket = packet.type === 2;\n        // packets with acknowledgement are not stored because the acknowledgement function cannot be serialized and\n        // restored on another server upon reconnection\n        const withoutAcknowledgement = packet.id === undefined;\n        const notVolatile = ((_a = opts.flags) === null || _a === void 0 ? void 0 : _a.volatile) === undefined;\n        if (isEventPacket && withoutAcknowledgement && notVolatile) {\n            const id = (0, yeast_1.yeast)();\n            // the offset is stored at the end of the data array, so the client knows the ID of the last packet it has\n            // processed (and the format is backward-compatible)\n            packet.data.push(id);\n            this.packets.push({\n                id,\n                opts,\n                data: packet.data,\n                emittedAt: Date.now(),\n            });\n        }\n        super.broadcast(packet, opts);\n    }\n}\nexports.SessionAwareAdapter = SessionAwareAdapter;\nfunction shouldIncludePacket(sessionRooms, opts) {\n    const included = opts.rooms.size === 0 || sessionRooms.some((room) => opts.rooms.has(room));\n    const notExcluded = sessionRooms.every((room) => !opts.except.has(room));\n    return included && notExcluded;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/socket.io-adapter/dist/in-memory-adapter.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}}],"sources":{"../node_modules/socket.io-adapter/dist/in-memory-adapter.js":"\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionAwareAdapter = exports.Adapter = void 0;\nconst events_1 = require(\"events\");\nconst yeast_1 = require(\"./contrib/yeast\");\nconst WebSocket = require(\"ws\");\nconst canPreComputeFrame = typeof ((_a = WebSocket === null || WebSocket === void 0 ? void 0 : WebSocket.Sender) === null || _a === void 0 ? void 0 : _a.frame) === \"function\";\nclass Adapter extends events_1.EventEmitter {\n    /**\n     * In-memory adapter constructor.\n     *\n     * @param {Namespace} nsp\n     */\n    constructor(nsp) {\n        super();\n        this.nsp = nsp;\n        this.rooms = new Map();\n        this.sids = new Map();\n        this.encoder = nsp.server.encoder;\n    }\n    /**\n     * To be overridden\n     */\n    init() { }\n    /**\n     * To be overridden\n     */\n    close() { }\n    /**\n     * Returns the number of Socket.IO servers in the cluster\n     *\n     * @public\n     */\n    serverCount() {\n        return Promise.resolve(1);\n    }\n    /**\n     * Adds a socket to a list of room.\n     *\n     * @param {SocketId}  id      the socket id\n     * @param {Set<Room>} rooms   a set of rooms\n     * @public\n     */\n    addAll(id, rooms) {\n        if (!this.sids.has(id)) {\n            this.sids.set(id, new Set());\n        }\n        for (const room of rooms) {\n            this.sids.get(id).add(room);\n            if (!this.rooms.has(room)) {\n                this.rooms.set(room, new Set());\n                this.emit(\"create-room\", room);\n            }\n            if (!this.rooms.get(room).has(id)) {\n                this.rooms.get(room).add(id);\n                this.emit(\"join-room\", room, id);\n            }\n        }\n    }\n    /**\n     * Removes a socket from a room.\n     *\n     * @param {SocketId} id     the socket id\n     * @param {Room}     room   the room name\n     */\n    del(id, room) {\n        if (this.sids.has(id)) {\n            this.sids.get(id).delete(room);\n        }\n        this._del(room, id);\n    }\n    _del(room, id) {\n        const _room = this.rooms.get(room);\n        if (_room != null) {\n            const deleted = _room.delete(id);\n            if (deleted) {\n                this.emit(\"leave-room\", room, id);\n            }\n            if (_room.size === 0 && this.rooms.delete(room)) {\n                this.emit(\"delete-room\", room);\n            }\n        }\n    }\n    /**\n     * Removes a socket from all rooms it's joined.\n     *\n     * @param {SocketId} id   the socket id\n     */\n    delAll(id) {\n        if (!this.sids.has(id)) {\n            return;\n        }\n        for (const room of this.sids.get(id)) {\n            this._del(room, id);\n        }\n        this.sids.delete(id);\n    }\n    /**\n     * Broadcasts a packet.\n     *\n     * Options:\n     *  - `flags` {Object} flags for this packet\n     *  - `except` {Array} sids that should be excluded\n     *  - `rooms` {Array} list of rooms to broadcast to\n     *\n     * @param {Object} packet   the packet object\n     * @param {Object} opts     the options\n     * @public\n     */\n    broadcast(packet, opts) {\n        const flags = opts.flags || {};\n        const packetOpts = {\n            preEncoded: true,\n            volatile: flags.volatile,\n            compress: flags.compress,\n        };\n        packet.nsp = this.nsp.name;\n        const encodedPackets = this._encode(packet, packetOpts);\n        this.apply(opts, (socket) => {\n            if (typeof socket.notifyOutgoingListeners === \"function\") {\n                socket.notifyOutgoingListeners(packet);\n            }\n            socket.client.writeToEngine(encodedPackets, packetOpts);\n        });\n    }\n    /**\n     * Broadcasts a packet and expects multiple acknowledgements.\n     *\n     * Options:\n     *  - `flags` {Object} flags for this packet\n     *  - `except` {Array} sids that should be excluded\n     *  - `rooms` {Array} list of rooms to broadcast to\n     *\n     * @param {Object} packet   the packet object\n     * @param {Object} opts     the options\n     * @param clientCountCallback - the number of clients that received the packet\n     * @param ack                 - the callback that will be called for each client response\n     *\n     * @public\n     */\n    broadcastWithAck(packet, opts, clientCountCallback, ack) {\n        const flags = opts.flags || {};\n        const packetOpts = {\n            preEncoded: true,\n            volatile: flags.volatile,\n            compress: flags.compress,\n        };\n        packet.nsp = this.nsp.name;\n        // we can use the same id for each packet, since the _ids counter is common (no duplicate)\n        packet.id = this.nsp._ids++;\n        const encodedPackets = this._encode(packet, packetOpts);\n        let clientCount = 0;\n        this.apply(opts, (socket) => {\n            // track the total number of acknowledgements that are expected\n            clientCount++;\n            // call the ack callback for each client response\n            socket.acks.set(packet.id, ack);\n            if (typeof socket.notifyOutgoingListeners === \"function\") {\n                socket.notifyOutgoingListeners(packet);\n            }\n            socket.client.writeToEngine(encodedPackets, packetOpts);\n        });\n        clientCountCallback(clientCount);\n    }\n    _encode(packet, packetOpts) {\n        const encodedPackets = this.encoder.encode(packet);\n        if (canPreComputeFrame &&\n            encodedPackets.length === 1 &&\n            typeof encodedPackets[0] === \"string\") {\n            // \"4\" being the \"message\" packet type in the Engine.IO protocol\n            const data = Buffer.from(\"4\" + encodedPackets[0]);\n            // see https://github.com/websockets/ws/issues/617#issuecomment-283002469\n            packetOpts.wsPreEncodedFrame = WebSocket.Sender.frame(data, {\n                readOnly: false,\n                mask: false,\n                rsv1: false,\n                opcode: 1,\n                fin: true,\n            });\n        }\n        return encodedPackets;\n    }\n    /**\n     * Gets a list of sockets by sid.\n     *\n     * @param {Set<Room>} rooms   the explicit set of rooms to check.\n     */\n    sockets(rooms) {\n        const sids = new Set();\n        this.apply({ rooms }, (socket) => {\n            sids.add(socket.id);\n        });\n        return Promise.resolve(sids);\n    }\n    /**\n     * Gets the list of rooms a given socket has joined.\n     *\n     * @param {SocketId} id   the socket id\n     */\n    socketRooms(id) {\n        return this.sids.get(id);\n    }\n    /**\n     * Returns the matching socket instances\n     *\n     * @param opts - the filters to apply\n     */\n    fetchSockets(opts) {\n        const sockets = [];\n        this.apply(opts, (socket) => {\n            sockets.push(socket);\n        });\n        return Promise.resolve(sockets);\n    }\n    /**\n     * Makes the matching socket instances join the specified rooms\n     *\n     * @param opts - the filters to apply\n     * @param rooms - the rooms to join\n     */\n    addSockets(opts, rooms) {\n        this.apply(opts, (socket) => {\n            socket.join(rooms);\n        });\n    }\n    /**\n     * Makes the matching socket instances leave the specified rooms\n     *\n     * @param opts - the filters to apply\n     * @param rooms - the rooms to leave\n     */\n    delSockets(opts, rooms) {\n        this.apply(opts, (socket) => {\n            rooms.forEach((room) => socket.leave(room));\n        });\n    }\n    /**\n     * Makes the matching socket instances disconnect\n     *\n     * @param opts - the filters to apply\n     * @param close - whether to close the underlying connection\n     */\n    disconnectSockets(opts, close) {\n        this.apply(opts, (socket) => {\n            socket.disconnect(close);\n        });\n    }\n    apply(opts, callback) {\n        const rooms = opts.rooms;\n        const except = this.computeExceptSids(opts.except);\n        if (rooms.size) {\n            const ids = new Set();\n            for (const room of rooms) {\n                if (!this.rooms.has(room))\n                    continue;\n                for (const id of this.rooms.get(room)) {\n                    if (ids.has(id) || except.has(id))\n                        continue;\n                    const socket = this.nsp.sockets.get(id);\n                    if (socket) {\n                        callback(socket);\n                        ids.add(id);\n                    }\n                }\n            }\n        }\n        else {\n            for (const [id] of this.sids) {\n                if (except.has(id))\n                    continue;\n                const socket = this.nsp.sockets.get(id);\n                if (socket)\n                    callback(socket);\n            }\n        }\n    }\n    computeExceptSids(exceptRooms) {\n        const exceptSids = new Set();\n        if (exceptRooms && exceptRooms.size > 0) {\n            for (const room of exceptRooms) {\n                if (this.rooms.has(room)) {\n                    this.rooms.get(room).forEach((sid) => exceptSids.add(sid));\n                }\n            }\n        }\n        return exceptSids;\n    }\n    /**\n     * Send a packet to the other Socket.IO servers in the cluster\n     * @param packet - an array of arguments, which may include an acknowledgement callback at the end\n     */\n    serverSideEmit(packet) {\n        console.warn(\"this adapter does not support the serverSideEmit() functionality\");\n    }\n    /**\n     * Save the client session in order to restore it upon reconnection.\n     */\n    persistSession(session) { }\n    /**\n     * Restore the session and find the packets that were missed by the client.\n     * @param pid\n     * @param offset\n     */\n    restoreSession(pid, offset) {\n        return null;\n    }\n}\nexports.Adapter = Adapter;\nclass SessionAwareAdapter extends Adapter {\n    constructor(nsp) {\n        super(nsp);\n        this.nsp = nsp;\n        this.sessions = new Map();\n        this.packets = [];\n        this.maxDisconnectionDuration =\n            nsp.server.opts.connectionStateRecovery.maxDisconnectionDuration;\n        const timer = setInterval(() => {\n            const threshold = Date.now() - this.maxDisconnectionDuration;\n            this.sessions.forEach((session, sessionId) => {\n                const hasExpired = session.disconnectedAt < threshold;\n                if (hasExpired) {\n                    this.sessions.delete(sessionId);\n                }\n            });\n            for (let i = this.packets.length - 1; i >= 0; i--) {\n                const hasExpired = this.packets[i].emittedAt < threshold;\n                if (hasExpired) {\n                    this.packets.splice(0, i + 1);\n                    break;\n                }\n            }\n        }, 60 * 1000);\n        // prevents the timer from keeping the process alive\n        timer.unref();\n    }\n    persistSession(session) {\n        session.disconnectedAt = Date.now();\n        this.sessions.set(session.pid, session);\n    }\n    restoreSession(pid, offset) {\n        const session = this.sessions.get(pid);\n        if (!session) {\n            // the session may have expired\n            return null;\n        }\n        const hasExpired = session.disconnectedAt + this.maxDisconnectionDuration < Date.now();\n        if (hasExpired) {\n            // the session has expired\n            this.sessions.delete(pid);\n            return null;\n        }\n        const index = this.packets.findIndex((packet) => packet.id === offset);\n        if (index === -1) {\n            // the offset may be too old\n            return null;\n        }\n        const missedPackets = [];\n        for (let i = index + 1; i < this.packets.length; i++) {\n            const packet = this.packets[i];\n            if (shouldIncludePacket(session.rooms, packet.opts)) {\n                missedPackets.push(packet.data);\n            }\n        }\n        return Promise.resolve(Object.assign(Object.assign({}, session), { missedPackets }));\n    }\n    broadcast(packet, opts) {\n        var _a;\n        const isEventPacket = packet.type === 2;\n        // packets with acknowledgement are not stored because the acknowledgement function cannot be serialized and\n        // restored on another server upon reconnection\n        const withoutAcknowledgement = packet.id === undefined;\n        const notVolatile = ((_a = opts.flags) === null || _a === void 0 ? void 0 : _a.volatile) === undefined;\n        if (isEventPacket && withoutAcknowledgement && notVolatile) {\n            const id = (0, yeast_1.yeast)();\n            // the offset is stored at the end of the data array, so the client knows the ID of the last packet it has\n            // processed (and the format is backward-compatible)\n            packet.data.push(id);\n            this.packets.push({\n                id,\n                opts,\n                data: packet.data,\n                emittedAt: Date.now(),\n            });\n        }\n        super.broadcast(packet, opts);\n    }\n}\nexports.SessionAwareAdapter = SessionAwareAdapter;\nfunction shouldIncludePacket(sessionRooms, opts) {\n    const included = opts.rooms.size === 0 || sessionRooms.some((room) => opts.rooms.has(room));\n    const notExcluded = sessionRooms.every((room) => !opts.except.has(room));\n    return included && notExcluded;\n}\n"},"lineCount":396}},"error":null,"hash":"df4d18638cabfdefe2772ee63ce54e1b","cacheData":{"env":{}}}